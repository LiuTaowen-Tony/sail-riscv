rm -rf generated_definitions/ocaml/* generated_definitions/c/* generated_definitions/latex/*
rm -rf generated_definitions/lem/* generated_definitions/isabelle/* generated_definitions/hol4/* generated_definitions/coq/*
rm -rf generated_definitions/for-rmem/*
/Library/Developer/CommandLineTools/usr/bin/make -C c_emulator/SoftFloat-3e/build/Linux-RISCV-GCC clean
rm -f s_eq128.o s_le128.o s_lt128.o s_shortShiftLeft128.o s_shortShiftRight128.o s_shortShiftRightJam64.o s_shortShiftRightJam64Extra.o s_shortShiftRightJam128.o s_shortShiftRightJam128Extra.o s_shiftRightJam32.o s_shiftRightJam64.o s_shiftRightJam64Extra.o s_shiftRightJam128.o s_shiftRightJam128Extra.o s_shiftRightJam256M.o s_countLeadingZeros8.o s_countLeadingZeros16.o s_countLeadingZeros32.o s_countLeadingZeros64.o s_add128.o s_add256M.o s_sub128.o s_sub256M.o s_mul64ByShifted32To128.o s_mul64To128.o s_mul128By32.o s_mul128To256M.o s_approxRecip_1Ks.o s_approxRecip32_1.o s_approxRecipSqrt_1Ks.o s_approxRecipSqrt32_1.o  softfloat_raiseFlags.o s_propagateNaNF16UI.o s_f32UIToCommonNaN.o s_commonNaNToF32UI.o s_propagateNaNF32UI.o s_f64UIToCommonNaN.o s_commonNaNToF64UI.o s_propagateNaNF64UI.o s_propagateNaNF128UI.o s_roundToUI32.o s_roundToUI64.o s_roundToI32.o s_roundToI64.o s_normSubnormalF16Sig.o s_roundPackToF16.o s_normRoundPackToF16.o s_addMagsF16.o s_subMagsF16.o s_mulAddF16.o s_normSubnormalF32Sig.o s_roundPackToF32.o s_normRoundPackToF32.o s_addMagsF32.o s_subMagsF32.o s_mulAddF32.o s_normSubnormalF64Sig.o s_roundPackToF64.o s_normRoundPackToF64.o s_addMagsF64.o s_subMagsF64.o s_mulAddF64.o s_normSubnormalExtF80Sig.o s_roundPackToExtF80.o s_normRoundPackToExtF80.o s_addMagsExtF80.o s_subMagsExtF80.o s_normSubnormalF128Sig.o s_roundPackToF128.o s_normRoundPackToF128.o s_addMagsF128.o s_subMagsF128.o s_mulAddF128.o softfloat_state.o ui32_to_f16.o ui32_to_f32.o ui32_to_f64.o ui32_to_extF80.o ui32_to_extF80M.o ui32_to_f128.o ui32_to_f128M.o ui64_to_f16.o ui64_to_f32.o ui64_to_f64.o ui64_to_extF80.o ui64_to_extF80M.o ui64_to_f128.o ui64_to_f128M.o i32_to_f16.o i32_to_f32.o i32_to_f64.o i32_to_extF80.o i32_to_extF80M.o i32_to_f128.o i32_to_f128M.o i64_to_f16.o i64_to_f32.o i64_to_f64.o i64_to_extF80.o i64_to_extF80M.o i64_to_f128.o i64_to_f128M.o f16_to_ui32.o f16_to_ui64.o f16_to_i32.o f16_to_i64.o f16_to_ui32_r_minMag.o f16_to_ui64_r_minMag.o f16_to_i32_r_minMag.o f16_to_i64_r_minMag.o f16_to_f32.o f16_to_f64.o f16_to_extF80.o f16_to_extF80M.o f16_to_f128.o f16_to_f128M.o f16_roundToInt.o f16_add.o f16_sub.o f16_mul.o f16_mulAdd.o f16_div.o f16_rem.o f16_sqrt.o f16_eq.o f16_le.o f16_lt.o f16_eq_signaling.o f16_le_quiet.o f16_lt_quiet.o f16_isSignalingNaN.o f32_to_ui32.o f32_to_ui64.o f32_to_i32.o f32_to_i64.o f32_to_ui32_r_minMag.o f32_to_ui64_r_minMag.o f32_to_i32_r_minMag.o f32_to_i64_r_minMag.o f32_to_f16.o f32_to_f64.o f32_to_extF80.o f32_to_extF80M.o f32_to_f128.o f32_to_f128M.o f32_roundToInt.o f32_add.o f32_sub.o f32_mul.o f32_mulAdd.o f32_div.o f32_rem.o f32_sqrt.o f32_eq.o f32_le.o f32_lt.o f32_eq_signaling.o f32_le_quiet.o f32_lt_quiet.o f32_isSignalingNaN.o f64_to_ui32.o f64_to_ui64.o f64_to_i32.o f64_to_i64.o f64_to_ui32_r_minMag.o f64_to_ui64_r_minMag.o f64_to_i32_r_minMag.o f64_to_i64_r_minMag.o f64_to_f16.o f64_to_f32.o f64_to_extF80.o f64_to_extF80M.o f64_to_f128.o f64_to_f128M.o f64_roundToInt.o f64_add.o f64_sub.o f64_mul.o f64_mulAdd.o f64_div.o f64_rem.o f64_sqrt.o f64_eq.o f64_le.o f64_lt.o f64_eq_signaling.o f64_le_quiet.o f64_lt_quiet.o f64_isSignalingNaN.o extF80_to_ui32.o extF80_to_ui64.o extF80_to_i32.o extF80_to_i64.o extF80_to_ui32_r_minMag.o extF80_to_ui64_r_minMag.o extF80_to_i32_r_minMag.o extF80_to_i64_r_minMag.o extF80_to_f16.o extF80_to_f32.o extF80_to_f64.o extF80_to_f128.o extF80_roundToInt.o extF80_add.o extF80_sub.o extF80_mul.o extF80_div.o extF80_rem.o extF80_sqrt.o extF80_eq.o extF80_le.o extF80_lt.o extF80_eq_signaling.o extF80_le_quiet.o extF80_lt_quiet.o extF80_isSignalingNaN.o extF80M_to_ui32.o extF80M_to_ui64.o extF80M_to_i32.o extF80M_to_i64.o extF80M_to_ui32_r_minMag.o extF80M_to_ui64_r_minMag.o extF80M_to_i32_r_minMag.o extF80M_to_i64_r_minMag.o extF80M_to_f16.o extF80M_to_f32.o extF80M_to_f64.o extF80M_to_f128M.o extF80M_roundToInt.o extF80M_add.o extF80M_sub.o extF80M_mul.o extF80M_div.o extF80M_rem.o extF80M_sqrt.o extF80M_eq.o extF80M_le.o extF80M_lt.o extF80M_eq_signaling.o extF80M_le_quiet.o extF80M_lt_quiet.o f128_to_ui32.o f128_to_ui64.o f128_to_i32.o f128_to_i64.o f128_to_ui32_r_minMag.o f128_to_ui64_r_minMag.o f128_to_i32_r_minMag.o f128_to_i64_r_minMag.o f128_to_f16.o f128_to_f32.o f128_to_extF80.o f128_to_f64.o f128_roundToInt.o f128_add.o f128_sub.o f128_mul.o f128_mulAdd.o f128_div.o f128_rem.o f128_sqrt.o f128_eq.o f128_le.o f128_lt.o f128_eq_signaling.o f128_le_quiet.o f128_lt_quiet.o f128_isSignalingNaN.o f128M_to_ui32.o f128M_to_ui64.o f128M_to_i32.o f128M_to_i64.o f128M_to_ui32_r_minMag.o f128M_to_ui64_r_minMag.o f128M_to_i32_r_minMag.o f128M_to_i64_r_minMag.o f128M_to_f16.o f128M_to_f32.o f128M_to_extF80M.o f128M_to_f64.o f128M_roundToInt.o f128M_add.o f128M_sub.o f128M_mul.o f128M_mulAdd.o f128M_div.o f128M_rem.o f128M_sqrt.o f128M_eq.o f128M_le.o f128M_lt.o f128M_eq_signaling.o f128M_le_quiet.o f128M_lt_quiet.o  softfloat.a
rm -f c_emulator/riscv_sim_RV32 c_emulator/riscv_sim_RV64  c_emulator/riscv_rvfi_RV32 c_emulator/riscv_rvfi_RV64
rm -rf ocaml_emulator/_sbuild ocaml_emulator/_build ocaml_emulator/riscv_ocaml_sim_RV32 ocaml_emulator/riscv_ocaml_sim_RV64 ocaml_emulator/tracecmp
rm -f *.gcno *.gcda
rm -f z3_problems
Holmake cleanAll
rm -f handwritten_support/riscv_extras.vo handwritten_support/riscv_extras.vos handwritten_support/riscv_extras.vok handwritten_support/riscv_extras.glob handwritten_support/.riscv_extras.aux
rm -f handwritten_support/mem_metadata.vo handwritten_support/mem_metadata.vos handwritten_support/mem_metadata.vok handwritten_support/mem_metadata.glob handwritten_support/.mem_metadata.aux
ocamlbuild -clean
Building 32-bit RISCV specification...
mkdir -p generated_definitions/ocaml/RV32
sail -dno_cast -ocaml -ocaml-nobuild -ocaml_build_dir generated_definitions/ocaml/RV32 -o riscv model/prelude.sail model/prelude_mapping.sail model/riscv_xlen32.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv32.sail model/riscv_vmem_rv32.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_ext.sail model/riscv_decode_ext.sail model/riscv_fetch.sail model/riscv_step.sail
Building 32-bit RISCV OCaml emulator: [0;91mfail[0m
OCaml-32 rv32mi-p-breakpoint.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-csr.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-illegal.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-ma_addr.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-ma_fetch.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-mcsr.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-sbreak.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-scall.elf: [0;91mfail[0m
OCaml-32 rv32mi-p-shamt.elf: [0;91mfail[0m
OCaml-32 rv32si-p-csr.elf: [0;91mfail[0m
OCaml-32 rv32si-p-dirty.elf: [0;91mfail[0m
OCaml-32 rv32si-p-ma_fetch.elf: [0;91mfail[0m
OCaml-32 rv32si-p-sbreak.elf: [0;91mfail[0m
OCaml-32 rv32si-p-scall.elf: [0;91mfail[0m
OCaml-32 rv32si-p-wfi.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amoadd_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amoand_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amomax_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amomaxu_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amomin_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amominu_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amoor_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amoswap_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-amoxor_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-p-lrsc.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amoadd_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amoand_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amomax_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amomaxu_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amomin_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amominu_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amoor_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amoswap_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-amoxor_w.elf: [0;91mfail[0m
OCaml-32 rv32ua-v-lrsc.elf: [0;91mfail[0m
OCaml-32 rv32uc-p-rvc.elf: [0;91mfail[0m
OCaml-32 rv32uc-v-rvc.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-add.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-addi.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-and.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-andi.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-auipc.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-beq.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-bge.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-bgeu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-blt.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-bltu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-bne.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-fence_i.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-jal.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-jalr.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lb.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lbu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lh.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lhu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lui.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-lw.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-or.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-ori.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sb.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sh.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-simple.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sll.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-slli.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-slt.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-slti.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sltiu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sltu.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sra.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-srai.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-srl.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-srli.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sub.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-sw.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-xor.elf: [0;91mfail[0m
OCaml-32 rv32ui-p-xori.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-add.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-addi.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-and.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-andi.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-auipc.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-beq.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-bge.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-bgeu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-blt.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-bltu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-bne.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-fence_i.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-jal.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-jalr.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lb.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lbu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lh.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lhu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lui.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-lw.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-or.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-ori.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sb.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sh.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-simple.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sll.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-slli.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-slt.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-slti.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sltiu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sltu.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sra.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-srai.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-srl.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-srli.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sub.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-sw.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-xor.elf: [0;91mfail[0m
OCaml-32 rv32ui-v-xori.elf: [0;91mfail[0m
OCaml-32 rv32um-p-div.elf: [0;91mfail[0m
OCaml-32 rv32um-p-divu.elf: [0;91mfail[0m
OCaml-32 rv32um-p-mul.elf: [0;91mfail[0m
OCaml-32 rv32um-p-mulh.elf: [0;91mfail[0m
OCaml-32 rv32um-p-mulhsu.elf: [0;91mfail[0m
OCaml-32 rv32um-p-mulhu.elf: [0;91mfail[0m
OCaml-32 rv32um-p-rem.elf: [0;91mfail[0m
OCaml-32 rv32um-p-remu.elf: [0;91mfail[0m
OCaml-32 rv32um-v-div.elf: [0;91mfail[0m
OCaml-32 rv32um-v-divu.elf: [0;91mfail[0m
OCaml-32 rv32um-v-mul.elf: [0;91mfail[0m
OCaml-32 rv32um-v-mulh.elf: [0;91mfail[0m
OCaml-32 rv32um-v-mulhsu.elf: [0;91mfail[0m
OCaml-32 rv32um-v-mulhu.elf: [0;91mfail[0m
OCaml-32 rv32um-v-rem.elf: [0;91mfail[0m
OCaml-32 rv32um-v-remu.elf: [0;91mfail[0m
32-bit RISCV OCaml tests: Passed 0 out of 132

mkdir -p generated_definitions/c
sail -dno_cast -O -Oconstant_fold -memo_z3 -c -c_include riscv_prelude.h -c_include riscv_platform.h -c_no_main model/prelude.sail model/prelude_mapping.sail model/riscv_xlen32.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv32.sail model/riscv_vmem_rv32.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_ext.sail model/riscv_decode_ext.sail model/riscv_fetch.sail model/riscv_step.sail model/main.sail -o generated_definitions/c/riscv_model_RV32
Building 32-bit RISCV C emulator: [0;91mfail[0m
C-32 rv32mi-p-breakpoint.elf: [0;91mfail[0m
C-32 rv32mi-p-csr.elf: [0;91mfail[0m
C-32 rv32mi-p-illegal.elf: [0;91mfail[0m
C-32 rv32mi-p-ma_addr.elf: [0;91mfail[0m
C-32 rv32mi-p-ma_fetch.elf: [0;91mfail[0m
C-32 rv32mi-p-mcsr.elf: [0;91mfail[0m
C-32 rv32mi-p-sbreak.elf: [0;91mfail[0m
C-32 rv32mi-p-scall.elf: [0;91mfail[0m
C-32 rv32mi-p-shamt.elf: [0;91mfail[0m
C-32 rv32si-p-csr.elf: [0;91mfail[0m
C-32 rv32si-p-dirty.elf: [0;91mfail[0m
C-32 rv32si-p-ma_fetch.elf: [0;91mfail[0m
C-32 rv32si-p-sbreak.elf: [0;91mfail[0m
C-32 rv32si-p-scall.elf: [0;91mfail[0m
C-32 rv32si-p-wfi.elf: [0;91mfail[0m
C-32 rv32ua-p-amoadd_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amoand_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amomax_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amomaxu_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amomin_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amominu_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amoor_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amoswap_w.elf: [0;91mfail[0m
C-32 rv32ua-p-amoxor_w.elf: [0;91mfail[0m
C-32 rv32ua-p-lrsc.elf: [0;91mfail[0m
C-32 rv32ua-v-amoadd_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amoand_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amomax_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amomaxu_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amomin_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amominu_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amoor_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amoswap_w.elf: [0;91mfail[0m
C-32 rv32ua-v-amoxor_w.elf: [0;91mfail[0m
C-32 rv32ua-v-lrsc.elf: [0;91mfail[0m
C-32 rv32uc-p-rvc.elf: [0;91mfail[0m
C-32 rv32uc-v-rvc.elf: [0;91mfail[0m
C-32 rv32ud-p-fadd.elf: [0;91mfail[0m
C-32 rv32ud-p-fclass.elf: [0;91mfail[0m
C-32 rv32ud-p-fcmp.elf: [0;91mfail[0m
C-32 rv32ud-p-fcvt.elf: [0;91mfail[0m
C-32 rv32ud-p-fcvt_w.elf: [0;91mfail[0m
C-32 rv32ud-p-fdiv.elf: [0;91mfail[0m
C-32 rv32ud-p-fmadd.elf: [0;91mfail[0m
C-32 rv32ud-p-fmin.elf: [0;91mfail[0m
C-32 rv32ud-v-fadd.elf: [0;91mfail[0m
C-32 rv32ud-v-fclass.elf: [0;91mfail[0m
C-32 rv32ud-v-fcmp.elf: [0;91mfail[0m
C-32 rv32ud-v-fcvt.elf: [0;91mfail[0m
C-32 rv32ud-v-fcvt_w.elf: [0;91mfail[0m
C-32 rv32ud-v-fdiv.elf: [0;91mfail[0m
C-32 rv32ud-v-fmadd.elf: [0;91mfail[0m
C-32 rv32ud-v-fmin.elf: [0;91mfail[0m
C-32 rv32uf-p-fadd.elf: [0;91mfail[0m
C-32 rv32uf-p-fclass.elf: [0;91mfail[0m
C-32 rv32uf-p-fcmp.elf: [0;91mfail[0m
C-32 rv32uf-p-fcvt.elf: [0;91mfail[0m
C-32 rv32uf-p-fcvt_w.elf: [0;91mfail[0m
C-32 rv32uf-p-fdiv.elf: [0;91mfail[0m
C-32 rv32uf-p-fmadd.elf: [0;91mfail[0m
C-32 rv32uf-p-fmin.elf: [0;91mfail[0m
C-32 rv32uf-v-fadd.elf: [0;91mfail[0m
C-32 rv32uf-v-fclass.elf: [0;91mfail[0m
C-32 rv32uf-v-fcmp.elf: [0;91mfail[0m
C-32 rv32uf-v-fcvt.elf: [0;91mfail[0m
C-32 rv32uf-v-fcvt_w.elf: [0;91mfail[0m
C-32 rv32uf-v-fdiv.elf: [0;91mfail[0m
C-32 rv32uf-v-fmadd.elf: [0;91mfail[0m
C-32 rv32uf-v-fmin.elf: [0;91mfail[0m
C-32 rv32ui-p-add.elf: [0;91mfail[0m
C-32 rv32ui-p-addi.elf: [0;91mfail[0m
C-32 rv32ui-p-and.elf: [0;91mfail[0m
C-32 rv32ui-p-andi.elf: [0;91mfail[0m
C-32 rv32ui-p-auipc.elf: [0;91mfail[0m
C-32 rv32ui-p-beq.elf: [0;91mfail[0m
C-32 rv32ui-p-bge.elf: [0;91mfail[0m
C-32 rv32ui-p-bgeu.elf: [0;91mfail[0m
C-32 rv32ui-p-blt.elf: [0;91mfail[0m
C-32 rv32ui-p-bltu.elf: [0;91mfail[0m
C-32 rv32ui-p-bne.elf: [0;91mfail[0m
C-32 rv32ui-p-fence_i.elf: [0;91mfail[0m
C-32 rv32ui-p-jal.elf: [0;91mfail[0m
C-32 rv32ui-p-jalr.elf: [0;91mfail[0m
C-32 rv32ui-p-lb.elf: [0;91mfail[0m
C-32 rv32ui-p-lbu.elf: [0;91mfail[0m
C-32 rv32ui-p-lh.elf: [0;91mfail[0m
C-32 rv32ui-p-lhu.elf: [0;91mfail[0m
C-32 rv32ui-p-lui.elf: [0;91mfail[0m
C-32 rv32ui-p-lw.elf: [0;91mfail[0m
C-32 rv32ui-p-or.elf: [0;91mfail[0m
C-32 rv32ui-p-ori.elf: [0;91mfail[0m
C-32 rv32ui-p-sb.elf: [0;91mfail[0m
C-32 rv32ui-p-sh.elf: [0;91mfail[0m
C-32 rv32ui-p-simple.elf: [0;91mfail[0m
C-32 rv32ui-p-sll.elf: [0;91mfail[0m
C-32 rv32ui-p-slli.elf: [0;91mfail[0m
C-32 rv32ui-p-slt.elf: [0;91mfail[0m
C-32 rv32ui-p-slti.elf: [0;91mfail[0m
C-32 rv32ui-p-sltiu.elf: [0;91mfail[0m
C-32 rv32ui-p-sltu.elf: [0;91mfail[0m
C-32 rv32ui-p-sra.elf: [0;91mfail[0m
C-32 rv32ui-p-srai.elf: [0;91mfail[0m
C-32 rv32ui-p-srl.elf: [0;91mfail[0m
C-32 rv32ui-p-srli.elf: [0;91mfail[0m
C-32 rv32ui-p-sub.elf: [0;91mfail[0m
C-32 rv32ui-p-sw.elf: [0;91mfail[0m
C-32 rv32ui-p-xor.elf: [0;91mfail[0m
C-32 rv32ui-p-xori.elf: [0;91mfail[0m
C-32 rv32ui-v-add.elf: [0;91mfail[0m
C-32 rv32ui-v-addi.elf: [0;91mfail[0m
C-32 rv32ui-v-and.elf: [0;91mfail[0m
C-32 rv32ui-v-andi.elf: [0;91mfail[0m
C-32 rv32ui-v-auipc.elf: [0;91mfail[0m
C-32 rv32ui-v-beq.elf: [0;91mfail[0m
C-32 rv32ui-v-bge.elf: [0;91mfail[0m
C-32 rv32ui-v-bgeu.elf: [0;91mfail[0m
C-32 rv32ui-v-blt.elf: [0;91mfail[0m
C-32 rv32ui-v-bltu.elf: [0;91mfail[0m
C-32 rv32ui-v-bne.elf: [0;91mfail[0m
C-32 rv32ui-v-fence_i.elf: [0;91mfail[0m
C-32 rv32ui-v-jal.elf: [0;91mfail[0m
C-32 rv32ui-v-jalr.elf: [0;91mfail[0m
C-32 rv32ui-v-lb.elf: [0;91mfail[0m
C-32 rv32ui-v-lbu.elf: [0;91mfail[0m
C-32 rv32ui-v-lh.elf: [0;91mfail[0m
C-32 rv32ui-v-lhu.elf: [0;91mfail[0m
C-32 rv32ui-v-lui.elf: [0;91mfail[0m
C-32 rv32ui-v-lw.elf: [0;91mfail[0m
C-32 rv32ui-v-or.elf: [0;91mfail[0m
C-32 rv32ui-v-ori.elf: [0;91mfail[0m
C-32 rv32ui-v-sb.elf: [0;91mfail[0m
C-32 rv32ui-v-sh.elf: [0;91mfail[0m
C-32 rv32ui-v-simple.elf: [0;91mfail[0m
C-32 rv32ui-v-sll.elf: [0;91mfail[0m
C-32 rv32ui-v-slli.elf: [0;91mfail[0m
C-32 rv32ui-v-slt.elf: [0;91mfail[0m
C-32 rv32ui-v-slti.elf: [0;91mfail[0m
C-32 rv32ui-v-sltiu.elf: [0;91mfail[0m
C-32 rv32ui-v-sltu.elf: [0;91mfail[0m
C-32 rv32ui-v-sra.elf: [0;91mfail[0m
C-32 rv32ui-v-srai.elf: [0;91mfail[0m
C-32 rv32ui-v-srl.elf: [0;91mfail[0m
C-32 rv32ui-v-srli.elf: [0;91mfail[0m
C-32 rv32ui-v-sub.elf: [0;91mfail[0m
C-32 rv32ui-v-sw.elf: [0;91mfail[0m
C-32 rv32ui-v-xor.elf: [0;91mfail[0m
C-32 rv32ui-v-xori.elf: [0;91mfail[0m
C-32 rv32um-p-div.elf: [0;91mfail[0m
C-32 rv32um-p-divu.elf: [0;91mfail[0m
C-32 rv32um-p-mul.elf: [0;91mfail[0m
C-32 rv32um-p-mulh.elf: [0;91mfail[0m
C-32 rv32um-p-mulhsu.elf: [0;91mfail[0m
C-32 rv32um-p-mulhu.elf: [0;91mfail[0m
C-32 rv32um-p-rem.elf: [0;91mfail[0m
C-32 rv32um-p-remu.elf: [0;91mfail[0m
C-32 rv32um-v-div.elf: [0;91mfail[0m
C-32 rv32um-v-divu.elf: [0;91mfail[0m
C-32 rv32um-v-mul.elf: [0;91mfail[0m
C-32 rv32um-v-mulh.elf: [0;91mfail[0m
C-32 rv32um-v-mulhsu.elf: [0;91mfail[0m
C-32 rv32um-v-mulhu.elf: [0;91mfail[0m
C-32 rv32um-v-rem.elf: [0;91mfail[0m
C-32 rv32um-v-remu.elf: [0;91mfail[0m
32-bit RISCV C tests: Passed 0 out of 164

rm -rf generated_definitions/ocaml/* generated_definitions/c/* generated_definitions/latex/*
rm -rf generated_definitions/lem/* generated_definitions/isabelle/* generated_definitions/hol4/* generated_definitions/coq/*
rm -rf generated_definitions/for-rmem/*
/Library/Developer/CommandLineTools/usr/bin/make -C c_emulator/SoftFloat-3e/build/Linux-RISCV-GCC clean
rm -f s_eq128.o s_le128.o s_lt128.o s_shortShiftLeft128.o s_shortShiftRight128.o s_shortShiftRightJam64.o s_shortShiftRightJam64Extra.o s_shortShiftRightJam128.o s_shortShiftRightJam128Extra.o s_shiftRightJam32.o s_shiftRightJam64.o s_shiftRightJam64Extra.o s_shiftRightJam128.o s_shiftRightJam128Extra.o s_shiftRightJam256M.o s_countLeadingZeros8.o s_countLeadingZeros16.o s_countLeadingZeros32.o s_countLeadingZeros64.o s_add128.o s_add256M.o s_sub128.o s_sub256M.o s_mul64ByShifted32To128.o s_mul64To128.o s_mul128By32.o s_mul128To256M.o s_approxRecip_1Ks.o s_approxRecip32_1.o s_approxRecipSqrt_1Ks.o s_approxRecipSqrt32_1.o  softfloat_raiseFlags.o s_propagateNaNF16UI.o s_f32UIToCommonNaN.o s_commonNaNToF32UI.o s_propagateNaNF32UI.o s_f64UIToCommonNaN.o s_commonNaNToF64UI.o s_propagateNaNF64UI.o s_propagateNaNF128UI.o s_roundToUI32.o s_roundToUI64.o s_roundToI32.o s_roundToI64.o s_normSubnormalF16Sig.o s_roundPackToF16.o s_normRoundPackToF16.o s_addMagsF16.o s_subMagsF16.o s_mulAddF16.o s_normSubnormalF32Sig.o s_roundPackToF32.o s_normRoundPackToF32.o s_addMagsF32.o s_subMagsF32.o s_mulAddF32.o s_normSubnormalF64Sig.o s_roundPackToF64.o s_normRoundPackToF64.o s_addMagsF64.o s_subMagsF64.o s_mulAddF64.o s_normSubnormalExtF80Sig.o s_roundPackToExtF80.o s_normRoundPackToExtF80.o s_addMagsExtF80.o s_subMagsExtF80.o s_normSubnormalF128Sig.o s_roundPackToF128.o s_normRoundPackToF128.o s_addMagsF128.o s_subMagsF128.o s_mulAddF128.o softfloat_state.o ui32_to_f16.o ui32_to_f32.o ui32_to_f64.o ui32_to_extF80.o ui32_to_extF80M.o ui32_to_f128.o ui32_to_f128M.o ui64_to_f16.o ui64_to_f32.o ui64_to_f64.o ui64_to_extF80.o ui64_to_extF80M.o ui64_to_f128.o ui64_to_f128M.o i32_to_f16.o i32_to_f32.o i32_to_f64.o i32_to_extF80.o i32_to_extF80M.o i32_to_f128.o i32_to_f128M.o i64_to_f16.o i64_to_f32.o i64_to_f64.o i64_to_extF80.o i64_to_extF80M.o i64_to_f128.o i64_to_f128M.o f16_to_ui32.o f16_to_ui64.o f16_to_i32.o f16_to_i64.o f16_to_ui32_r_minMag.o f16_to_ui64_r_minMag.o f16_to_i32_r_minMag.o f16_to_i64_r_minMag.o f16_to_f32.o f16_to_f64.o f16_to_extF80.o f16_to_extF80M.o f16_to_f128.o f16_to_f128M.o f16_roundToInt.o f16_add.o f16_sub.o f16_mul.o f16_mulAdd.o f16_div.o f16_rem.o f16_sqrt.o f16_eq.o f16_le.o f16_lt.o f16_eq_signaling.o f16_le_quiet.o f16_lt_quiet.o f16_isSignalingNaN.o f32_to_ui32.o f32_to_ui64.o f32_to_i32.o f32_to_i64.o f32_to_ui32_r_minMag.o f32_to_ui64_r_minMag.o f32_to_i32_r_minMag.o f32_to_i64_r_minMag.o f32_to_f16.o f32_to_f64.o f32_to_extF80.o f32_to_extF80M.o f32_to_f128.o f32_to_f128M.o f32_roundToInt.o f32_add.o f32_sub.o f32_mul.o f32_mulAdd.o f32_div.o f32_rem.o f32_sqrt.o f32_eq.o f32_le.o f32_lt.o f32_eq_signaling.o f32_le_quiet.o f32_lt_quiet.o f32_isSignalingNaN.o f64_to_ui32.o f64_to_ui64.o f64_to_i32.o f64_to_i64.o f64_to_ui32_r_minMag.o f64_to_ui64_r_minMag.o f64_to_i32_r_minMag.o f64_to_i64_r_minMag.o f64_to_f16.o f64_to_f32.o f64_to_extF80.o f64_to_extF80M.o f64_to_f128.o f64_to_f128M.o f64_roundToInt.o f64_add.o f64_sub.o f64_mul.o f64_mulAdd.o f64_div.o f64_rem.o f64_sqrt.o f64_eq.o f64_le.o f64_lt.o f64_eq_signaling.o f64_le_quiet.o f64_lt_quiet.o f64_isSignalingNaN.o extF80_to_ui32.o extF80_to_ui64.o extF80_to_i32.o extF80_to_i64.o extF80_to_ui32_r_minMag.o extF80_to_ui64_r_minMag.o extF80_to_i32_r_minMag.o extF80_to_i64_r_minMag.o extF80_to_f16.o extF80_to_f32.o extF80_to_f64.o extF80_to_f128.o extF80_roundToInt.o extF80_add.o extF80_sub.o extF80_mul.o extF80_div.o extF80_rem.o extF80_sqrt.o extF80_eq.o extF80_le.o extF80_lt.o extF80_eq_signaling.o extF80_le_quiet.o extF80_lt_quiet.o extF80_isSignalingNaN.o extF80M_to_ui32.o extF80M_to_ui64.o extF80M_to_i32.o extF80M_to_i64.o extF80M_to_ui32_r_minMag.o extF80M_to_ui64_r_minMag.o extF80M_to_i32_r_minMag.o extF80M_to_i64_r_minMag.o extF80M_to_f16.o extF80M_to_f32.o extF80M_to_f64.o extF80M_to_f128M.o extF80M_roundToInt.o extF80M_add.o extF80M_sub.o extF80M_mul.o extF80M_div.o extF80M_rem.o extF80M_sqrt.o extF80M_eq.o extF80M_le.o extF80M_lt.o extF80M_eq_signaling.o extF80M_le_quiet.o extF80M_lt_quiet.o f128_to_ui32.o f128_to_ui64.o f128_to_i32.o f128_to_i64.o f128_to_ui32_r_minMag.o f128_to_ui64_r_minMag.o f128_to_i32_r_minMag.o f128_to_i64_r_minMag.o f128_to_f16.o f128_to_f32.o f128_to_extF80.o f128_to_f64.o f128_roundToInt.o f128_add.o f128_sub.o f128_mul.o f128_mulAdd.o f128_div.o f128_rem.o f128_sqrt.o f128_eq.o f128_le.o f128_lt.o f128_eq_signaling.o f128_le_quiet.o f128_lt_quiet.o f128_isSignalingNaN.o f128M_to_ui32.o f128M_to_ui64.o f128M_to_i32.o f128M_to_i64.o f128M_to_ui32_r_minMag.o f128M_to_ui64_r_minMag.o f128M_to_i32_r_minMag.o f128M_to_i64_r_minMag.o f128M_to_f16.o f128M_to_f32.o f128M_to_extF80M.o f128M_to_f64.o f128M_roundToInt.o f128M_add.o f128M_sub.o f128M_mul.o f128M_mulAdd.o f128M_div.o f128M_rem.o f128M_sqrt.o f128M_eq.o f128M_le.o f128M_lt.o f128M_eq_signaling.o f128M_le_quiet.o f128M_lt_quiet.o  softfloat.a
rm -f c_emulator/riscv_sim_RV32 c_emulator/riscv_sim_RV64  c_emulator/riscv_rvfi_RV32 c_emulator/riscv_rvfi_RV64
rm -rf ocaml_emulator/_sbuild ocaml_emulator/_build ocaml_emulator/riscv_ocaml_sim_RV32 ocaml_emulator/riscv_ocaml_sim_RV64 ocaml_emulator/tracecmp
rm -f *.gcno *.gcda
rm -f z3_problems
Holmake cleanAll
rm -f handwritten_support/riscv_extras.vo handwritten_support/riscv_extras.vos handwritten_support/riscv_extras.vok handwritten_support/riscv_extras.glob handwritten_support/.riscv_extras.aux
rm -f handwritten_support/mem_metadata.vo handwritten_support/mem_metadata.vos handwritten_support/mem_metadata.vok handwritten_support/mem_metadata.glob handwritten_support/.mem_metadata.aux
ocamlbuild -clean
Building 64-bit RISCV specification...
mkdir -p generated_definitions/ocaml/RV64
sail -dno_cast -ocaml -ocaml-nobuild -ocaml_build_dir generated_definitions/ocaml/RV64 -o riscv model/prelude.sail model/prelude_mapping.sail model/riscv_xlen64.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv39.sail model/riscv_vmem_sv48.sail model/riscv_vmem_rv64.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_ext.sail model/riscv_decode_ext.sail model/riscv_fetch.sail model/riscv_step.sail model/riscv_analysis.sail
Building 64-bit RISCV OCaml emulator: [0;91mfail[0m
OCaml-64 rv64mi-p-access.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-breakpoint.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-csr.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-illegal.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-ma_addr.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-ma_fetch.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-mcsr.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-sbreak.elf: [0;91mfail[0m
OCaml-64 rv64mi-p-scall.elf: [0;91mfail[0m
OCaml-64 rv64si-p-csr.elf: [0;91mfail[0m
OCaml-64 rv64si-p-dirty.elf: [0;91mfail[0m
OCaml-64 rv64si-p-ma_fetch.elf: [0;91mfail[0m
OCaml-64 rv64si-p-sbreak.elf: [0;91mfail[0m
OCaml-64 rv64si-p-scall.elf: [0;91mfail[0m
OCaml-64 rv64si-p-wfi.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoadd_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoadd_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoand_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoand_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomax_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomax_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomaxu_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomaxu_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomin_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amomin_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amominu_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amominu_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoor_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoor_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoswap_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoswap_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoxor_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-amoxor_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-p-lrsc.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoadd_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoadd_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoand_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoand_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomax_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomax_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomaxu_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomaxu_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomin_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amomin_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amominu_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amominu_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoor_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoor_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoswap_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoswap_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoxor_d.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-amoxor_w.elf: [0;91mfail[0m
OCaml-64 rv64ua-v-lrsc.elf: [0;91mfail[0m
OCaml-64 rv64uc-p-rvc.elf: [0;91mfail[0m
OCaml-64 rv64uc-v-rvc.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-add.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-addi.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-addiw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-addw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-and.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-andi.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-auipc.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-beq.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-bge.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-bgeu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-blt.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-bltu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-bne.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-fence_i.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-jal.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-jalr.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lb.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lbu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-ld.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lh.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lhu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lui.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-lwu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-or.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-ori.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sb.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sd.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sh.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-simple.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sll.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-slli.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-slliw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sllw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-slt.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-slti.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sltiu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sltu.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sra.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-srai.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sraiw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sraw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-srl.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-srli.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-srliw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-srlw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sub.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-subw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-sw.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-xor.elf: [0;91mfail[0m
OCaml-64 rv64ui-p-xori.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-add.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-addi.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-addiw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-addw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-and.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-andi.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-auipc.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-beq.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-bge.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-bgeu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-blt.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-bltu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-bne.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-fence_i.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-jal.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-jalr.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lb.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lbu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-ld.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lh.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lhu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lui.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-lwu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-or.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-ori.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sb.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sd.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sh.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-simple.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sll.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-slli.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-slliw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sllw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-slt.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-slti.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sltiu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sltu.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sra.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-srai.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sraiw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sraw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-srl.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-srli.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-srliw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-srlw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sub.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-subw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-sw.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-xor.elf: [0;91mfail[0m
OCaml-64 rv64ui-v-xori.elf: [0;91mfail[0m
OCaml-64 rv64um-p-div.elf: [0;91mfail[0m
OCaml-64 rv64um-p-divu.elf: [0;91mfail[0m
OCaml-64 rv64um-p-divuw.elf: [0;91mfail[0m
OCaml-64 rv64um-p-divw.elf: [0;91mfail[0m
OCaml-64 rv64um-p-mul.elf: [0;91mfail[0m
OCaml-64 rv64um-p-mulh.elf: [0;91mfail[0m
OCaml-64 rv64um-p-mulhsu.elf: [0;91mfail[0m
OCaml-64 rv64um-p-mulhu.elf: [0;91mfail[0m
OCaml-64 rv64um-p-mulw.elf: [0;91mfail[0m
OCaml-64 rv64um-p-rem.elf: [0;91mfail[0m
OCaml-64 rv64um-p-remu.elf: [0;91mfail[0m
OCaml-64 rv64um-p-remuw.elf: [0;91mfail[0m
OCaml-64 rv64um-p-remw.elf: [0;91mfail[0m
OCaml-64 rv64um-v-div.elf: [0;91mfail[0m
OCaml-64 rv64um-v-divu.elf: [0;91mfail[0m
OCaml-64 rv64um-v-divuw.elf: [0;91mfail[0m
OCaml-64 rv64um-v-divw.elf: [0;91mfail[0m
OCaml-64 rv64um-v-mul.elf: [0;91mfail[0m
OCaml-64 rv64um-v-mulh.elf: [0;91mfail[0m
OCaml-64 rv64um-v-mulhsu.elf: [0;91mfail[0m
OCaml-64 rv64um-v-mulhu.elf: [0;91mfail[0m
OCaml-64 rv64um-v-mulw.elf: [0;91mfail[0m
OCaml-64 rv64um-v-rem.elf: [0;91mfail[0m
OCaml-64 rv64um-v-remu.elf: [0;91mfail[0m
OCaml-64 rv64um-v-remuw.elf: [0;91mfail[0m
OCaml-64 rv64um-v-remw.elf: [0;91mfail[0m
64-bit RISCV OCaml tests: Passed 0 out of 184

mkdir -p generated_definitions/c
sail -dno_cast -O -Oconstant_fold -memo_z3 -c -c_include riscv_prelude.h -c_include riscv_platform.h -c_no_main model/prelude.sail model/prelude_mapping.sail model/riscv_xlen64.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv39.sail model/riscv_vmem_sv48.sail model/riscv_vmem_rv64.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_ext.sail model/riscv_decode_ext.sail model/riscv_fetch.sail model/riscv_step.sail model/riscv_analysis.sail model/main.sail -o generated_definitions/c/riscv_model_RV64
Building 64-bit RISCV C emulator: [0;91mfail[0m
C-64 rv64mi-p-access.elf: [0;91mfail[0m
C-64 rv64mi-p-breakpoint.elf: [0;91mfail[0m
C-64 rv64mi-p-csr.elf: [0;91mfail[0m
C-64 rv64mi-p-illegal.elf: [0;91mfail[0m
C-64 rv64mi-p-ma_addr.elf: [0;91mfail[0m
C-64 rv64mi-p-ma_fetch.elf: [0;91mfail[0m
C-64 rv64mi-p-mcsr.elf: [0;91mfail[0m
C-64 rv64mi-p-sbreak.elf: [0;91mfail[0m
C-64 rv64mi-p-scall.elf: [0;91mfail[0m
C-64 rv64si-p-csr.elf: [0;91mfail[0m
C-64 rv64si-p-dirty.elf: [0;91mfail[0m
C-64 rv64si-p-ma_fetch.elf: [0;91mfail[0m
C-64 rv64si-p-sbreak.elf: [0;91mfail[0m
C-64 rv64si-p-scall.elf: [0;91mfail[0m
C-64 rv64si-p-wfi.elf: [0;91mfail[0m
C-64 rv64ua-p-amoadd_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amoadd_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amoand_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amoand_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amomax_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amomax_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amomaxu_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amomaxu_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amomin_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amomin_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amominu_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amominu_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amoor_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amoor_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amoswap_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amoswap_w.elf: [0;91mfail[0m
C-64 rv64ua-p-amoxor_d.elf: [0;91mfail[0m
C-64 rv64ua-p-amoxor_w.elf: [0;91mfail[0m
C-64 rv64ua-p-lrsc.elf: [0;91mfail[0m
C-64 rv64ua-v-amoadd_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amoadd_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amoand_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amoand_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amomax_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amomax_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amomaxu_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amomaxu_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amomin_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amomin_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amominu_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amominu_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amoor_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amoor_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amoswap_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amoswap_w.elf: [0;91mfail[0m
C-64 rv64ua-v-amoxor_d.elf: [0;91mfail[0m
C-64 rv64ua-v-amoxor_w.elf: [0;91mfail[0m
C-64 rv64ua-v-lrsc.elf: [0;91mfail[0m
C-64 rv64uc-p-rvc.elf: [0;91mfail[0m
C-64 rv64uc-v-rvc.elf: [0;91mfail[0m
C-64 rv64ud-p-fadd.elf: [0;91mfail[0m
C-64 rv64ud-p-fclass.elf: [0;91mfail[0m
C-64 rv64ud-p-fcmp.elf: [0;91mfail[0m
C-64 rv64ud-p-fcvt.elf: [0;91mfail[0m
C-64 rv64ud-p-fcvt_w.elf: [0;91mfail[0m
C-64 rv64ud-p-fdiv.elf: [0;91mfail[0m
C-64 rv64ud-p-fmadd.elf: [0;91mfail[0m
C-64 rv64ud-p-fmin.elf: [0;91mfail[0m
C-64 rv64ud-p-ldst.elf: [0;91mfail[0m
C-64 rv64ud-p-move.elf: [0;91mfail[0m
C-64 rv64ud-p-recoding.elf: [0;91mfail[0m
C-64 rv64ud-p-structural.elf: [0;91mfail[0m
C-64 rv64ud-v-fadd.elf: [0;91mfail[0m
C-64 rv64ud-v-fclass.elf: [0;91mfail[0m
C-64 rv64ud-v-fcmp.elf: [0;91mfail[0m
C-64 rv64ud-v-fcvt.elf: [0;91mfail[0m
C-64 rv64ud-v-fcvt_w.elf: [0;91mfail[0m
C-64 rv64ud-v-fdiv.elf: [0;91mfail[0m
C-64 rv64ud-v-fmadd.elf: [0;91mfail[0m
C-64 rv64ud-v-fmin.elf: [0;91mfail[0m
C-64 rv64ud-v-ldst.elf: [0;91mfail[0m
C-64 rv64ud-v-move.elf: [0;91mfail[0m
C-64 rv64ud-v-recoding.elf: [0;91mfail[0m
C-64 rv64ud-v-structural.elf: [0;91mfail[0m
C-64 rv64uf-p-fadd.elf: [0;91mfail[0m
C-64 rv64uf-p-fclass.elf: [0;91mfail[0m
C-64 rv64uf-p-fcmp.elf: [0;91mfail[0m
C-64 rv64uf-p-fcvt.elf: [0;91mfail[0m
C-64 rv64uf-p-fcvt_w.elf: [0;91mfail[0m
C-64 rv64uf-p-fdiv.elf: [0;91mfail[0m
C-64 rv64uf-p-fmadd.elf: [0;91mfail[0m
C-64 rv64uf-p-fmin.elf: [0;91mfail[0m
C-64 rv64uf-p-ldst.elf: [0;91mfail[0m
C-64 rv64uf-p-move.elf: [0;91mfail[0m
C-64 rv64uf-p-recoding.elf: [0;91mfail[0m
C-64 rv64uf-v-fadd.elf: [0;91mfail[0m
C-64 rv64uf-v-fclass.elf: [0;91mfail[0m
C-64 rv64uf-v-fcmp.elf: [0;91mfail[0m
C-64 rv64uf-v-fcvt.elf: [0;91mfail[0m
C-64 rv64uf-v-fcvt_w.elf: [0;91mfail[0m
C-64 rv64uf-v-fdiv.elf: [0;91mfail[0m
C-64 rv64uf-v-fmadd.elf: [0;91mfail[0m
C-64 rv64uf-v-fmin.elf: [0;91mfail[0m
C-64 rv64uf-v-ldst.elf: [0;91mfail[0m
C-64 rv64uf-v-move.elf: [0;91mfail[0m
C-64 rv64uf-v-recoding.elf: [0;91mfail[0m
C-64 rv64ui-p-add.elf: [0;91mfail[0m
C-64 rv64ui-p-addi.elf: [0;91mfail[0m
C-64 rv64ui-p-addiw.elf: [0;91mfail[0m
C-64 rv64ui-p-addw.elf: [0;91mfail[0m
C-64 rv64ui-p-and.elf: [0;91mfail[0m
C-64 rv64ui-p-andi.elf: [0;91mfail[0m
C-64 rv64ui-p-auipc.elf: [0;91mfail[0m
C-64 rv64ui-p-beq.elf: [0;91mfail[0m
C-64 rv64ui-p-bge.elf: [0;91mfail[0m
C-64 rv64ui-p-bgeu.elf: [0;91mfail[0m
C-64 rv64ui-p-blt.elf: [0;91mfail[0m
C-64 rv64ui-p-bltu.elf: [0;91mfail[0m
C-64 rv64ui-p-bne.elf: [0;91mfail[0m
C-64 rv64ui-p-fence_i.elf: [0;91mfail[0m
C-64 rv64ui-p-jal.elf: [0;91mfail[0m
C-64 rv64ui-p-jalr.elf: [0;91mfail[0m
C-64 rv64ui-p-lb.elf: [0;91mfail[0m
C-64 rv64ui-p-lbu.elf: [0;91mfail[0m
C-64 rv64ui-p-ld.elf: [0;91mfail[0m
C-64 rv64ui-p-lh.elf: [0;91mfail[0m
C-64 rv64ui-p-lhu.elf: [0;91mfail[0m
C-64 rv64ui-p-lui.elf: [0;91mfail[0m
C-64 rv64ui-p-lw.elf: [0;91mfail[0m
C-64 rv64ui-p-lwu.elf: [0;91mfail[0m
C-64 rv64ui-p-or.elf: [0;91mfail[0m
C-64 rv64ui-p-ori.elf: [0;91mfail[0m
C-64 rv64ui-p-sb.elf: [0;91mfail[0m
C-64 rv64ui-p-sd.elf: [0;91mfail[0m
C-64 rv64ui-p-sh.elf: [0;91mfail[0m
C-64 rv64ui-p-simple.elf: [0;91mfail[0m
C-64 rv64ui-p-sll.elf: [0;91mfail[0m
C-64 rv64ui-p-slli.elf: [0;91mfail[0m
C-64 rv64ui-p-slliw.elf: [0;91mfail[0m
C-64 rv64ui-p-sllw.elf: [0;91mfail[0m
C-64 rv64ui-p-slt.elf: [0;91mfail[0m
C-64 rv64ui-p-slti.elf: [0;91mfail[0m
C-64 rv64ui-p-sltiu.elf: [0;91mfail[0m
C-64 rv64ui-p-sltu.elf: [0;91mfail[0m
C-64 rv64ui-p-sra.elf: [0;91mfail[0m
C-64 rv64ui-p-srai.elf: [0;91mfail[0m
C-64 rv64ui-p-sraiw.elf: [0;91mfail[0m
C-64 rv64ui-p-sraw.elf: [0;91mfail[0m
C-64 rv64ui-p-srl.elf: [0;91mfail[0m
C-64 rv64ui-p-srli.elf: [0;91mfail[0m
C-64 rv64ui-p-srliw.elf: [0;91mfail[0m
C-64 rv64ui-p-srlw.elf: [0;91mfail[0m
C-64 rv64ui-p-sub.elf: [0;91mfail[0m
C-64 rv64ui-p-subw.elf: [0;91mfail[0m
C-64 rv64ui-p-sw.elf: [0;91mfail[0m
C-64 rv64ui-p-xor.elf: [0;91mfail[0m
C-64 rv64ui-p-xori.elf: [0;91mfail[0m
C-64 rv64ui-v-add.elf: [0;91mfail[0m
C-64 rv64ui-v-addi.elf: [0;91mfail[0m
C-64 rv64ui-v-addiw.elf: [0;91mfail[0m
C-64 rv64ui-v-addw.elf: [0;91mfail[0m
C-64 rv64ui-v-and.elf: [0;91mfail[0m
C-64 rv64ui-v-andi.elf: [0;91mfail[0m
C-64 rv64ui-v-auipc.elf: [0;91mfail[0m
C-64 rv64ui-v-beq.elf: [0;91mfail[0m
C-64 rv64ui-v-bge.elf: [0;91mfail[0m
C-64 rv64ui-v-bgeu.elf: [0;91mfail[0m
C-64 rv64ui-v-blt.elf: [0;91mfail[0m
C-64 rv64ui-v-bltu.elf: [0;91mfail[0m
C-64 rv64ui-v-bne.elf: [0;91mfail[0m
C-64 rv64ui-v-fence_i.elf: [0;91mfail[0m
C-64 rv64ui-v-jal.elf: [0;91mfail[0m
C-64 rv64ui-v-jalr.elf: [0;91mfail[0m
C-64 rv64ui-v-lb.elf: [0;91mfail[0m
C-64 rv64ui-v-lbu.elf: [0;91mfail[0m
C-64 rv64ui-v-ld.elf: [0;91mfail[0m
C-64 rv64ui-v-lh.elf: [0;91mfail[0m
C-64 rv64ui-v-lhu.elf: [0;91mfail[0m
C-64 rv64ui-v-lui.elf: [0;91mfail[0m
C-64 rv64ui-v-lw.elf: [0;91mfail[0m
C-64 rv64ui-v-lwu.elf: [0;91mfail[0m
C-64 rv64ui-v-or.elf: [0;91mfail[0m
C-64 rv64ui-v-ori.elf: [0;91mfail[0m
C-64 rv64ui-v-sb.elf: [0;91mfail[0m
C-64 rv64ui-v-sd.elf: [0;91mfail[0m
C-64 rv64ui-v-sh.elf: [0;91mfail[0m
C-64 rv64ui-v-simple.elf: [0;91mfail[0m
C-64 rv64ui-v-sll.elf: [0;91mfail[0m
C-64 rv64ui-v-slli.elf: [0;91mfail[0m
C-64 rv64ui-v-slliw.elf: [0;91mfail[0m
C-64 rv64ui-v-sllw.elf: [0;91mfail[0m
C-64 rv64ui-v-slt.elf: [0;91mfail[0m
C-64 rv64ui-v-slti.elf: [0;91mfail[0m
C-64 rv64ui-v-sltiu.elf: [0;91mfail[0m
C-64 rv64ui-v-sltu.elf: [0;91mfail[0m
C-64 rv64ui-v-sra.elf: [0;91mfail[0m
C-64 rv64ui-v-srai.elf: [0;91mfail[0m
C-64 rv64ui-v-sraiw.elf: [0;91mfail[0m
C-64 rv64ui-v-sraw.elf: [0;91mfail[0m
C-64 rv64ui-v-srl.elf: [0;91mfail[0m
C-64 rv64ui-v-srli.elf: [0;91mfail[0m
C-64 rv64ui-v-srliw.elf: [0;91mfail[0m
C-64 rv64ui-v-srlw.elf: [0;91mfail[0m
C-64 rv64ui-v-sub.elf: [0;91mfail[0m
C-64 rv64ui-v-subw.elf: [0;91mfail[0m
C-64 rv64ui-v-sw.elf: [0;91mfail[0m
C-64 rv64ui-v-xor.elf: [0;91mfail[0m
C-64 rv64ui-v-xori.elf: [0;91mfail[0m
C-64 rv64um-p-div.elf: [0;91mfail[0m
C-64 rv64um-p-divu.elf: [0;91mfail[0m
C-64 rv64um-p-divuw.elf: [0;91mfail[0m
C-64 rv64um-p-divw.elf: [0;91mfail[0m
C-64 rv64um-p-mul.elf: [0;91mfail[0m
C-64 rv64um-p-mulh.elf: [0;91mfail[0m
C-64 rv64um-p-mulhsu.elf: [0;91mfail[0m
C-64 rv64um-p-mulhu.elf: [0;91mfail[0m
C-64 rv64um-p-mulw.elf: [0;91mfail[0m
C-64 rv64um-p-rem.elf: [0;91mfail[0m
C-64 rv64um-p-remu.elf: [0;91mfail[0m
C-64 rv64um-p-remuw.elf: [0;91mfail[0m
C-64 rv64um-p-remw.elf: [0;91mfail[0m
C-64 rv64um-v-div.elf: [0;91mfail[0m
C-64 rv64um-v-divu.elf: [0;91mfail[0m
C-64 rv64um-v-divuw.elf: [0;91mfail[0m
C-64 rv64um-v-divw.elf: [0;91mfail[0m
C-64 rv64um-v-mul.elf: [0;91mfail[0m
C-64 rv64um-v-mulh.elf: [0;91mfail[0m
C-64 rv64um-v-mulhsu.elf: [0;91mfail[0m
C-64 rv64um-v-mulhu.elf: [0;91mfail[0m
C-64 rv64um-v-mulw.elf: [0;91mfail[0m
C-64 rv64um-v-rem.elf: [0;91mfail[0m
C-64 rv64um-v-remu.elf: [0;91mfail[0m
C-64 rv64um-v-remuw.elf: [0;91mfail[0m
C-64 rv64um-v-remw.elf: [0;91mfail[0m
64-bit RISCV C tests: Passed 0 out of 230

rm -rf generated_definitions/ocaml/* generated_definitions/c/* generated_definitions/latex/*
rm -rf generated_definitions/lem/* generated_definitions/isabelle/* generated_definitions/hol4/* generated_definitions/coq/*
rm -rf generated_definitions/for-rmem/*
/Library/Developer/CommandLineTools/usr/bin/make -C c_emulator/SoftFloat-3e/build/Linux-RISCV-GCC clean
rm -f s_eq128.o s_le128.o s_lt128.o s_shortShiftLeft128.o s_shortShiftRight128.o s_shortShiftRightJam64.o s_shortShiftRightJam64Extra.o s_shortShiftRightJam128.o s_shortShiftRightJam128Extra.o s_shiftRightJam32.o s_shiftRightJam64.o s_shiftRightJam64Extra.o s_shiftRightJam128.o s_shiftRightJam128Extra.o s_shiftRightJam256M.o s_countLeadingZeros8.o s_countLeadingZeros16.o s_countLeadingZeros32.o s_countLeadingZeros64.o s_add128.o s_add256M.o s_sub128.o s_sub256M.o s_mul64ByShifted32To128.o s_mul64To128.o s_mul128By32.o s_mul128To256M.o s_approxRecip_1Ks.o s_approxRecip32_1.o s_approxRecipSqrt_1Ks.o s_approxRecipSqrt32_1.o  softfloat_raiseFlags.o s_propagateNaNF16UI.o s_f32UIToCommonNaN.o s_commonNaNToF32UI.o s_propagateNaNF32UI.o s_f64UIToCommonNaN.o s_commonNaNToF64UI.o s_propagateNaNF64UI.o s_propagateNaNF128UI.o s_roundToUI32.o s_roundToUI64.o s_roundToI32.o s_roundToI64.o s_normSubnormalF16Sig.o s_roundPackToF16.o s_normRoundPackToF16.o s_addMagsF16.o s_subMagsF16.o s_mulAddF16.o s_normSubnormalF32Sig.o s_roundPackToF32.o s_normRoundPackToF32.o s_addMagsF32.o s_subMagsF32.o s_mulAddF32.o s_normSubnormalF64Sig.o s_roundPackToF64.o s_normRoundPackToF64.o s_addMagsF64.o s_subMagsF64.o s_mulAddF64.o s_normSubnormalExtF80Sig.o s_roundPackToExtF80.o s_normRoundPackToExtF80.o s_addMagsExtF80.o s_subMagsExtF80.o s_normSubnormalF128Sig.o s_roundPackToF128.o s_normRoundPackToF128.o s_addMagsF128.o s_subMagsF128.o s_mulAddF128.o softfloat_state.o ui32_to_f16.o ui32_to_f32.o ui32_to_f64.o ui32_to_extF80.o ui32_to_extF80M.o ui32_to_f128.o ui32_to_f128M.o ui64_to_f16.o ui64_to_f32.o ui64_to_f64.o ui64_to_extF80.o ui64_to_extF80M.o ui64_to_f128.o ui64_to_f128M.o i32_to_f16.o i32_to_f32.o i32_to_f64.o i32_to_extF80.o i32_to_extF80M.o i32_to_f128.o i32_to_f128M.o i64_to_f16.o i64_to_f32.o i64_to_f64.o i64_to_extF80.o i64_to_extF80M.o i64_to_f128.o i64_to_f128M.o f16_to_ui32.o f16_to_ui64.o f16_to_i32.o f16_to_i64.o f16_to_ui32_r_minMag.o f16_to_ui64_r_minMag.o f16_to_i32_r_minMag.o f16_to_i64_r_minMag.o f16_to_f32.o f16_to_f64.o f16_to_extF80.o f16_to_extF80M.o f16_to_f128.o f16_to_f128M.o f16_roundToInt.o f16_add.o f16_sub.o f16_mul.o f16_mulAdd.o f16_div.o f16_rem.o f16_sqrt.o f16_eq.o f16_le.o f16_lt.o f16_eq_signaling.o f16_le_quiet.o f16_lt_quiet.o f16_isSignalingNaN.o f32_to_ui32.o f32_to_ui64.o f32_to_i32.o f32_to_i64.o f32_to_ui32_r_minMag.o f32_to_ui64_r_minMag.o f32_to_i32_r_minMag.o f32_to_i64_r_minMag.o f32_to_f16.o f32_to_f64.o f32_to_extF80.o f32_to_extF80M.o f32_to_f128.o f32_to_f128M.o f32_roundToInt.o f32_add.o f32_sub.o f32_mul.o f32_mulAdd.o f32_div.o f32_rem.o f32_sqrt.o f32_eq.o f32_le.o f32_lt.o f32_eq_signaling.o f32_le_quiet.o f32_lt_quiet.o f32_isSignalingNaN.o f64_to_ui32.o f64_to_ui64.o f64_to_i32.o f64_to_i64.o f64_to_ui32_r_minMag.o f64_to_ui64_r_minMag.o f64_to_i32_r_minMag.o f64_to_i64_r_minMag.o f64_to_f16.o f64_to_f32.o f64_to_extF80.o f64_to_extF80M.o f64_to_f128.o f64_to_f128M.o f64_roundToInt.o f64_add.o f64_sub.o f64_mul.o f64_mulAdd.o f64_div.o f64_rem.o f64_sqrt.o f64_eq.o f64_le.o f64_lt.o f64_eq_signaling.o f64_le_quiet.o f64_lt_quiet.o f64_isSignalingNaN.o extF80_to_ui32.o extF80_to_ui64.o extF80_to_i32.o extF80_to_i64.o extF80_to_ui32_r_minMag.o extF80_to_ui64_r_minMag.o extF80_to_i32_r_minMag.o extF80_to_i64_r_minMag.o extF80_to_f16.o extF80_to_f32.o extF80_to_f64.o extF80_to_f128.o extF80_roundToInt.o extF80_add.o extF80_sub.o extF80_mul.o extF80_div.o extF80_rem.o extF80_sqrt.o extF80_eq.o extF80_le.o extF80_lt.o extF80_eq_signaling.o extF80_le_quiet.o extF80_lt_quiet.o extF80_isSignalingNaN.o extF80M_to_ui32.o extF80M_to_ui64.o extF80M_to_i32.o extF80M_to_i64.o extF80M_to_ui32_r_minMag.o extF80M_to_ui64_r_minMag.o extF80M_to_i32_r_minMag.o extF80M_to_i64_r_minMag.o extF80M_to_f16.o extF80M_to_f32.o extF80M_to_f64.o extF80M_to_f128M.o extF80M_roundToInt.o extF80M_add.o extF80M_sub.o extF80M_mul.o extF80M_div.o extF80M_rem.o extF80M_sqrt.o extF80M_eq.o extF80M_le.o extF80M_lt.o extF80M_eq_signaling.o extF80M_le_quiet.o extF80M_lt_quiet.o f128_to_ui32.o f128_to_ui64.o f128_to_i32.o f128_to_i64.o f128_to_ui32_r_minMag.o f128_to_ui64_r_minMag.o f128_to_i32_r_minMag.o f128_to_i64_r_minMag.o f128_to_f16.o f128_to_f32.o f128_to_extF80.o f128_to_f64.o f128_roundToInt.o f128_add.o f128_sub.o f128_mul.o f128_mulAdd.o f128_div.o f128_rem.o f128_sqrt.o f128_eq.o f128_le.o f128_lt.o f128_eq_signaling.o f128_le_quiet.o f128_lt_quiet.o f128_isSignalingNaN.o f128M_to_ui32.o f128M_to_ui64.o f128M_to_i32.o f128M_to_i64.o f128M_to_ui32_r_minMag.o f128M_to_ui64_r_minMag.o f128M_to_i32_r_minMag.o f128M_to_i64_r_minMag.o f128M_to_f16.o f128M_to_f32.o f128M_to_extF80M.o f128M_to_f64.o f128M_roundToInt.o f128M_add.o f128M_sub.o f128M_mul.o f128M_mulAdd.o f128M_div.o f128M_rem.o f128M_sqrt.o f128M_eq.o f128M_le.o f128M_lt.o f128M_eq_signaling.o f128M_le_quiet.o f128M_lt_quiet.o  softfloat.a
rm -f c_emulator/riscv_sim_RV32 c_emulator/riscv_sim_RV64  c_emulator/riscv_rvfi_RV32 c_emulator/riscv_rvfi_RV64
rm -rf ocaml_emulator/_sbuild ocaml_emulator/_build ocaml_emulator/riscv_ocaml_sim_RV32 ocaml_emulator/riscv_ocaml_sim_RV64 ocaml_emulator/tracecmp
rm -f *.gcno *.gcda
rm -f z3_problems
Holmake cleanAll
rm -f handwritten_support/riscv_extras.vo handwritten_support/riscv_extras.vos handwritten_support/riscv_extras.vok handwritten_support/riscv_extras.glob handwritten_support/.riscv_extras.aux
rm -f handwritten_support/mem_metadata.vo handwritten_support/mem_metadata.vos handwritten_support/mem_metadata.vok handwritten_support/mem_metadata.glob handwritten_support/.mem_metadata.aux
ocamlbuild -clean
mkdir -p generated_definitions/c
sail -c_preserve rvfi_set_instr_packet -c_preserve rvfi_get_cmd -c_preserve rvfi_get_insn -c_preserve rvfi_get_v2_trace_size -c_preserve rvfi_get_v2_support_packet -c_preserve rvfi_get_exec_packet_v1 -c_preserve rvfi_get_exec_packet_v2 -c_preserve rvfi_get_mem_data -c_preserve rvfi_get_int_data -c_preserve rvfi_zero_exec_packet -c_preserve rvfi_halt_exec_packet -c_preserve print_rvfi_exec -c_preserve print_instr_packet -c_preserve print_rvfi_exec -dno_cast -O -Oconstant_fold -memo_z3 -c -c_include riscv_prelude.h -c_include riscv_platform.h -c_no_main model/prelude.sail model/prelude_mapping.sail model/riscv_xlen32.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/rvfi_dii.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv32.sail model/riscv_vmem_rv32.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_rvfi.sail model/riscv_decode_ext.sail model/riscv_fetch_rvfi.sail model/riscv_step.sail model/main.sail -o generated_definitions/c/riscv_rvfi_model_RV32
Building 32-bit RISCV RVFI C emulator: [0;91mfail[0m
32-bit RISCV RVFI C tests: Passed 0 out of 1

rm -rf generated_definitions/ocaml/* generated_definitions/c/* generated_definitions/latex/*
rm -rf generated_definitions/lem/* generated_definitions/isabelle/* generated_definitions/hol4/* generated_definitions/coq/*
rm -rf generated_definitions/for-rmem/*
/Library/Developer/CommandLineTools/usr/bin/make -C c_emulator/SoftFloat-3e/build/Linux-RISCV-GCC clean
rm -f s_eq128.o s_le128.o s_lt128.o s_shortShiftLeft128.o s_shortShiftRight128.o s_shortShiftRightJam64.o s_shortShiftRightJam64Extra.o s_shortShiftRightJam128.o s_shortShiftRightJam128Extra.o s_shiftRightJam32.o s_shiftRightJam64.o s_shiftRightJam64Extra.o s_shiftRightJam128.o s_shiftRightJam128Extra.o s_shiftRightJam256M.o s_countLeadingZeros8.o s_countLeadingZeros16.o s_countLeadingZeros32.o s_countLeadingZeros64.o s_add128.o s_add256M.o s_sub128.o s_sub256M.o s_mul64ByShifted32To128.o s_mul64To128.o s_mul128By32.o s_mul128To256M.o s_approxRecip_1Ks.o s_approxRecip32_1.o s_approxRecipSqrt_1Ks.o s_approxRecipSqrt32_1.o  softfloat_raiseFlags.o s_propagateNaNF16UI.o s_f32UIToCommonNaN.o s_commonNaNToF32UI.o s_propagateNaNF32UI.o s_f64UIToCommonNaN.o s_commonNaNToF64UI.o s_propagateNaNF64UI.o s_propagateNaNF128UI.o s_roundToUI32.o s_roundToUI64.o s_roundToI32.o s_roundToI64.o s_normSubnormalF16Sig.o s_roundPackToF16.o s_normRoundPackToF16.o s_addMagsF16.o s_subMagsF16.o s_mulAddF16.o s_normSubnormalF32Sig.o s_roundPackToF32.o s_normRoundPackToF32.o s_addMagsF32.o s_subMagsF32.o s_mulAddF32.o s_normSubnormalF64Sig.o s_roundPackToF64.o s_normRoundPackToF64.o s_addMagsF64.o s_subMagsF64.o s_mulAddF64.o s_normSubnormalExtF80Sig.o s_roundPackToExtF80.o s_normRoundPackToExtF80.o s_addMagsExtF80.o s_subMagsExtF80.o s_normSubnormalF128Sig.o s_roundPackToF128.o s_normRoundPackToF128.o s_addMagsF128.o s_subMagsF128.o s_mulAddF128.o softfloat_state.o ui32_to_f16.o ui32_to_f32.o ui32_to_f64.o ui32_to_extF80.o ui32_to_extF80M.o ui32_to_f128.o ui32_to_f128M.o ui64_to_f16.o ui64_to_f32.o ui64_to_f64.o ui64_to_extF80.o ui64_to_extF80M.o ui64_to_f128.o ui64_to_f128M.o i32_to_f16.o i32_to_f32.o i32_to_f64.o i32_to_extF80.o i32_to_extF80M.o i32_to_f128.o i32_to_f128M.o i64_to_f16.o i64_to_f32.o i64_to_f64.o i64_to_extF80.o i64_to_extF80M.o i64_to_f128.o i64_to_f128M.o f16_to_ui32.o f16_to_ui64.o f16_to_i32.o f16_to_i64.o f16_to_ui32_r_minMag.o f16_to_ui64_r_minMag.o f16_to_i32_r_minMag.o f16_to_i64_r_minMag.o f16_to_f32.o f16_to_f64.o f16_to_extF80.o f16_to_extF80M.o f16_to_f128.o f16_to_f128M.o f16_roundToInt.o f16_add.o f16_sub.o f16_mul.o f16_mulAdd.o f16_div.o f16_rem.o f16_sqrt.o f16_eq.o f16_le.o f16_lt.o f16_eq_signaling.o f16_le_quiet.o f16_lt_quiet.o f16_isSignalingNaN.o f32_to_ui32.o f32_to_ui64.o f32_to_i32.o f32_to_i64.o f32_to_ui32_r_minMag.o f32_to_ui64_r_minMag.o f32_to_i32_r_minMag.o f32_to_i64_r_minMag.o f32_to_f16.o f32_to_f64.o f32_to_extF80.o f32_to_extF80M.o f32_to_f128.o f32_to_f128M.o f32_roundToInt.o f32_add.o f32_sub.o f32_mul.o f32_mulAdd.o f32_div.o f32_rem.o f32_sqrt.o f32_eq.o f32_le.o f32_lt.o f32_eq_signaling.o f32_le_quiet.o f32_lt_quiet.o f32_isSignalingNaN.o f64_to_ui32.o f64_to_ui64.o f64_to_i32.o f64_to_i64.o f64_to_ui32_r_minMag.o f64_to_ui64_r_minMag.o f64_to_i32_r_minMag.o f64_to_i64_r_minMag.o f64_to_f16.o f64_to_f32.o f64_to_extF80.o f64_to_extF80M.o f64_to_f128.o f64_to_f128M.o f64_roundToInt.o f64_add.o f64_sub.o f64_mul.o f64_mulAdd.o f64_div.o f64_rem.o f64_sqrt.o f64_eq.o f64_le.o f64_lt.o f64_eq_signaling.o f64_le_quiet.o f64_lt_quiet.o f64_isSignalingNaN.o extF80_to_ui32.o extF80_to_ui64.o extF80_to_i32.o extF80_to_i64.o extF80_to_ui32_r_minMag.o extF80_to_ui64_r_minMag.o extF80_to_i32_r_minMag.o extF80_to_i64_r_minMag.o extF80_to_f16.o extF80_to_f32.o extF80_to_f64.o extF80_to_f128.o extF80_roundToInt.o extF80_add.o extF80_sub.o extF80_mul.o extF80_div.o extF80_rem.o extF80_sqrt.o extF80_eq.o extF80_le.o extF80_lt.o extF80_eq_signaling.o extF80_le_quiet.o extF80_lt_quiet.o extF80_isSignalingNaN.o extF80M_to_ui32.o extF80M_to_ui64.o extF80M_to_i32.o extF80M_to_i64.o extF80M_to_ui32_r_minMag.o extF80M_to_ui64_r_minMag.o extF80M_to_i32_r_minMag.o extF80M_to_i64_r_minMag.o extF80M_to_f16.o extF80M_to_f32.o extF80M_to_f64.o extF80M_to_f128M.o extF80M_roundToInt.o extF80M_add.o extF80M_sub.o extF80M_mul.o extF80M_div.o extF80M_rem.o extF80M_sqrt.o extF80M_eq.o extF80M_le.o extF80M_lt.o extF80M_eq_signaling.o extF80M_le_quiet.o extF80M_lt_quiet.o f128_to_ui32.o f128_to_ui64.o f128_to_i32.o f128_to_i64.o f128_to_ui32_r_minMag.o f128_to_ui64_r_minMag.o f128_to_i32_r_minMag.o f128_to_i64_r_minMag.o f128_to_f16.o f128_to_f32.o f128_to_extF80.o f128_to_f64.o f128_roundToInt.o f128_add.o f128_sub.o f128_mul.o f128_mulAdd.o f128_div.o f128_rem.o f128_sqrt.o f128_eq.o f128_le.o f128_lt.o f128_eq_signaling.o f128_le_quiet.o f128_lt_quiet.o f128_isSignalingNaN.o f128M_to_ui32.o f128M_to_ui64.o f128M_to_i32.o f128M_to_i64.o f128M_to_ui32_r_minMag.o f128M_to_ui64_r_minMag.o f128M_to_i32_r_minMag.o f128M_to_i64_r_minMag.o f128M_to_f16.o f128M_to_f32.o f128M_to_extF80M.o f128M_to_f64.o f128M_roundToInt.o f128M_add.o f128M_sub.o f128M_mul.o f128M_mulAdd.o f128M_div.o f128M_rem.o f128M_sqrt.o f128M_eq.o f128M_le.o f128M_lt.o f128M_eq_signaling.o f128M_le_quiet.o f128M_lt_quiet.o  softfloat.a
rm -f c_emulator/riscv_sim_RV32 c_emulator/riscv_sim_RV64  c_emulator/riscv_rvfi_RV32 c_emulator/riscv_rvfi_RV64
rm -rf ocaml_emulator/_sbuild ocaml_emulator/_build ocaml_emulator/riscv_ocaml_sim_RV32 ocaml_emulator/riscv_ocaml_sim_RV64 ocaml_emulator/tracecmp
rm -f *.gcno *.gcda
rm -f z3_problems
Holmake cleanAll
rm -f handwritten_support/riscv_extras.vo handwritten_support/riscv_extras.vos handwritten_support/riscv_extras.vok handwritten_support/riscv_extras.glob handwritten_support/.riscv_extras.aux
rm -f handwritten_support/mem_metadata.vo handwritten_support/mem_metadata.vos handwritten_support/mem_metadata.vok handwritten_support/mem_metadata.glob handwritten_support/.mem_metadata.aux
ocamlbuild -clean
mkdir -p generated_definitions/c
sail -c_preserve rvfi_set_instr_packet -c_preserve rvfi_get_cmd -c_preserve rvfi_get_insn -c_preserve rvfi_get_v2_trace_size -c_preserve rvfi_get_v2_support_packet -c_preserve rvfi_get_exec_packet_v1 -c_preserve rvfi_get_exec_packet_v2 -c_preserve rvfi_get_mem_data -c_preserve rvfi_get_int_data -c_preserve rvfi_zero_exec_packet -c_preserve rvfi_halt_exec_packet -c_preserve print_rvfi_exec -c_preserve print_instr_packet -c_preserve print_rvfi_exec -dno_cast -O -Oconstant_fold -memo_z3 -c -c_include riscv_prelude.h -c_include riscv_platform.h -c_no_main model/prelude.sail model/prelude_mapping.sail model/riscv_xlen64.sail model/riscv_flen_Q.sail model/prelude_mem_metadata.sail model/prelude_mem.sail model/rvfi_dii.sail model/riscv_types_common.sail model/riscv_types_ext.sail model/riscv_types.sail model/riscv_vmem_types.sail model/riscv_reg_type.sail model/riscv_freg_type.sail model/riscv_regs.sail model/riscv_pc_access.sail model/riscv_sys_regs.sail model/riscv_pmp_regs.sail model/riscv_pmp_control.sail model/riscv_ext_regs.sail model/riscv_addr_checks_common.sail model/riscv_addr_checks.sail model/riscv_misa_ext.sail model/riscv_csr_map.sail model/riscv_next_regs.sail model/riscv_sys_exceptions.sail model/riscv_sync_exception.sail model/riscv_next_control.sail model/riscv_softfloat_interface.sail model/riscv_fdext_regs.sail model/riscv_fdext_control.sail model/riscv_csr_ext.sail model/riscv_sys_control.sail model/riscv_platform.sail model/riscv_mem.sail model/riscv_pte.sail model/riscv_ptw.sail model/riscv_vmem_common.sail model/riscv_vmem_tlb.sail model/riscv_vmem_sv39.sail model/riscv_vmem_sv48.sail model/riscv_vmem_rv64.sail model/riscv_types_kext.sail model/riscv_insts_begin.sail model/riscv_insts_base.sail model/riscv_insts_aext.sail model/riscv_insts_cext.sail model/riscv_insts_mext.sail model/riscv_insts_zicsr.sail model/riscv_insts_next.sail model/riscv_insts_hints.sail model/riscv_insts_fext.sail model/riscv_insts_cfext.sail model/riscv_insts_dext.sail model/riscv_insts_cdext.sail model/riscv_insts_qext.sail model/riscv_insts_zba.sail model/riscv_insts_zbb.sail model/riscv_insts_zbc.sail model/riscv_insts_zbs.sail model/riscv_insts_zfh.sail model/riscv_insts_zkn.sail model/riscv_insts_zks.sail model/riscv_insts_zbkb.sail model/riscv_insts_zbkx.sail model/riscv_jalr_seq.sail model/riscv_insts_end.sail model/riscv_step_common.sail model/riscv_step_rvfi.sail model/riscv_decode_ext.sail model/riscv_fetch_rvfi.sail model/riscv_step.sail model/main.sail -o generated_definitions/c/riscv_rvfi_model_RV64
Building 64-bit RISCV RVFI C emulator: [0;91mfail[0m
64-bit RISCV RVFI C tests: Passed 0 out of 1

Passed 0 out of 712

